# Generated by Django 4.2.7 on 2025-07-26 21:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('event_date', models.DateField(verbose_name='event date')),
                ('event_location', models.CharField(blank=True, max_length=200, verbose_name='event location')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='status')),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('password_protected', 'Password Protected')], default='public', max_length=20, verbose_name='privacy')),
                ('password', models.CharField(blank=True, max_length=128, verbose_name='password')),
                ('max_files_per_user', models.PositiveIntegerField(default=10, verbose_name='max files per user')),
                ('allowed_file_types', models.JSONField(default=list, verbose_name='allowed file types')),
                ('max_file_size_mb', models.PositiveIntegerField(default=50, verbose_name='max file size (MB)')),
                ('require_approval', models.BooleanField(default=False, verbose_name='require approval')),
                ('enable_comments', models.BooleanField(default=True, verbose_name='enable comments')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/', verbose_name='QR code')),
                ('access_code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='access code')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='view count')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='download count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
                'db_table': 'albums',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('name_tr', models.CharField(max_length=100, verbose_name='turkish name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('color', models.CharField(default='#3B82F6', max_length=7, verbose_name='color')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='sort order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Event Type',
                'verbose_name_plural': 'Event Types',
                'db_table': 'event_types',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AlbumSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_on_upload', models.BooleanField(default=True, verbose_name='notify on upload')),
                ('notification_email', models.EmailField(blank=True, max_length=254, verbose_name='notification email')),
                ('theme_color', models.CharField(default='#3B82F6', max_length=7, verbose_name='theme color')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='album_covers/', verbose_name='cover image')),
                ('welcome_message', models.TextField(blank=True, verbose_name='welcome message')),
                ('thank_you_message', models.TextField(blank=True, verbose_name='thank you message')),
                ('enable_geolocation', models.BooleanField(default=False, verbose_name='enable geolocation')),
                ('enable_face_detection', models.BooleanField(default=False, verbose_name='enable face detection')),
                ('auto_organize_by_date', models.BooleanField(default=True, verbose_name='auto organize by date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('album', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='advanced_settings', to='albums.album')),
            ],
            options={
                'verbose_name': 'Album Settings',
                'verbose_name_plural': 'Album Settings',
                'db_table': 'album_settings',
            },
        ),
        migrations.CreateModel(
            name='AlbumCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('viewer', 'Viewer'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='viewer', max_length=20, verbose_name='role')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborators', to='albums.album')),
            ],
            options={
                'verbose_name': 'Album Collaborator',
                'verbose_name_plural': 'Album Collaborators',
                'db_table': 'album_collaborators',
            },
        ),
    ]
