# Generated by Django 4.2.7 on 2025-07-26 21:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('uploads', '0001_initial'),
        ('albums', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('template_type', models.CharField(choices=[('new_upload', 'New Upload'), ('album_created', 'Album Created'), ('album_shared', 'Album Shared'), ('upload_approved', 'Upload Approved'), ('upload_rejected', 'Upload Rejected'), ('welcome', 'Welcome'), ('password_reset', 'Password Reset')], max_length=50, verbose_name='template type')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('html_content', models.TextField(verbose_name='HTML content')),
                ('text_content', models.TextField(blank=True, verbose_name='text content')),
                ('available_variables', models.JSONField(default=list, help_text='List of variables available in this template', verbose_name='available variables')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_new_upload', models.BooleanField(default=True, verbose_name='email on new upload')),
                ('email_new_comment', models.BooleanField(default=True, verbose_name='email on new comment')),
                ('email_album_shared', models.BooleanField(default=True, verbose_name='email on album shared')),
                ('email_marketing', models.BooleanField(default=False, verbose_name='marketing emails')),
                ('app_new_upload', models.BooleanField(default=True, verbose_name='app notification on new upload')),
                ('app_new_comment', models.BooleanField(default=True, verbose_name='app notification on new comment')),
                ('app_album_shared', models.BooleanField(default=True, verbose_name='app notification on album shared')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('never', 'Never')], default='immediate', max_length=20, verbose_name='digest frequency')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digest_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly')], max_length=20, verbose_name='digest type')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('html_content', models.TextField(verbose_name='HTML content')),
                ('text_content', models.TextField(blank=True, verbose_name='text content')),
                ('notification_count', models.PositiveIntegerField(default=0, verbose_name='notification count')),
                ('is_sent', models.BooleanField(default=False, verbose_name='is sent')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_digests', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Notification Digest',
                'verbose_name_plural': 'Notification Digests',
                'db_table': 'notification_digests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('upload', 'New Upload'), ('comment', 'New Comment'), ('like', 'New Like'), ('album_shared', 'Album Shared'), ('system', 'System Notification')], max_length=20, verbose_name='type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='data')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='albums.album', verbose_name='album')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='recipient')),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='uploads.upload', verbose_name='upload')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recipient_email', models.EmailField(max_length=254, verbose_name='recipient email')),
                ('recipient_name', models.CharField(blank=True, max_length=200, verbose_name='recipient name')),
                ('subject', models.CharField(max_length=200, verbose_name='subject')),
                ('html_content', models.TextField(verbose_name='HTML content')),
                ('text_content', models.TextField(blank=True, verbose_name='text content')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='context data')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered'), ('bounced', 'Bounced')], default='pending', max_length=20, verbose_name='status')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='delivered at')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='opened at')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='clicked at')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='retry count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='max retries')),
                ('next_retry_at', models.DateTimeField(blank=True, null=True, verbose_name='next retry at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='albums.album', verbose_name='album')),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_notifications', to=settings.AUTH_USER_MODEL, verbose_name='recipient user')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_notifications', to='notifications.notificationtemplate', verbose_name='template')),
                ('upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='uploads.upload', verbose_name='upload')),
            ],
            options={
                'verbose_name': 'Email Notification',
                'verbose_name_plural': 'Email Notifications',
                'db_table': 'email_notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
